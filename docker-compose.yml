version: "3"

services:
  db:
    image: postgres:16.1
    container_name: postgres_db_streak
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
      # TZ: Asia/Tokyo
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - ./_docker-volumes:/var/lib/postgresql/data-${COMPOSE_PROJECT_NAME}
      - ./src/backend/init.sql:/docker-entrypoint-initdb.d/init-${COMPOSE_PROJECT_NAME}.sql

  api:
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    container_name: api
    ports:
      - "8888:8888"
    environment:
      APP_ENV: local
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: ${POSTGRES_HOST}
      DB_NAME: ${POSTGRES_DB}
      DB_PORT: ${POSTGRES_PORT}
      DB_SSLMODE: ${SSLMODE}
      API_DOMAIN: ${API_DOMAIN}
      SECRET: ${SECRET}
      FE_URL: ${FE_URL}
      TZ: Asia/Tokyo

  pgadmin:
    image: dpage/pgadmin4:6.11
    container_name: pgadmin_streak
    ports:
      - 80:80
    volumes:
      - ./_docker-volumes:/var/lib/pgadmin-${COMPOSE_PROJECT_NAME}/
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    logging:
      driver: "none"
    depends_on:
      - db

  # app:
  #   build:
  #     context: ./src/frontend
  #     dockerfile: Dockerfile
  #   container_name: app
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - WATCHPACK_POLLING=true # hot reload
